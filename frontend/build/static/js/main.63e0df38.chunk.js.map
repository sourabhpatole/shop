{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","actions/productActions.js","components/Paginate.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","style","fontSize","fontFamily","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","listProducts","pageNum","listProductDetails","Paginate","Pagination","Array","keys","key","active","HomeScreen","match","params","useEffect","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","Image","alt","fluid","ListGroup","description","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandle","confirm","delete","deleteUser","href","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandle","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.63e0df38.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n} from \"../constants/productConstants\";\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n","import {\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const submitHandle = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={submitHandle} inline>\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder=\"Search Product...\"\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n      ></Form.Control>\r\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import axios from \"axios\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\nimport {\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport SearchBox from \"./SearchBox\";\nimport { logout } from \"../actions/userActions\";\nconst Header = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const logouthandler = () => {\n    dispatch(logout());\n  };\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer\n            to=\"/\"\n            style={{ fontSize: \"23px\", fontFamily: \"Ubuntu\" }}\n          >\n            <Navbar.Brand>Simple Store</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logouthandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Product</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Shop</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? \"fas fa-star\"\n              : value >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? \"fas fa-star\"\n              : value >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? \"fas fa-star\"\n              : value >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? \"fas fa-star\"\n              : value >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  );\n};\n\nRating.defaultProps = {\n  color: \"#f8e825\",\n};\n\nexport default Rating;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from \"axios\";\r\nimport {\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const listProducts =\r\n  (keyword = \"\", pageNum = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNum=${pageNum}`\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Paginate from \"../components/Paginate\";\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword;\r\n  const pageNum = match.params.pageNum || 1;\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNum));\r\n  }, [dispatch, keyword, pageNum]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : \"\"}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const { success: successProductReview, error: errorProductReview } =\n    productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert(\"Review Submitted!\");\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"3\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" variant=\"primary\">\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { login } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //dispatch login\r\n\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { register } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //dispatch register\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name </Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //dispatch register\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password not match\");\r\n    } else {\r\n      //dispatch update profile\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && (\r\n          <Message variant=\"success\">Profile Updated Successfully</Message>\r\n        )}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name </Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Order</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n  const dispatch = useDispatch();\r\n  const submithandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submithandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country name\"\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const dispatch = useDispatch();\r\n  const submithandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submithandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"Stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"Stripe\"\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 1000 ? 0 : 60);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  if (!loading) {\r\n    //calculate price\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, userInfo, history, successDeliver, order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark as Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandle = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandle(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, userId, user, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit user</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name </Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"is admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nimport Paginate from \"../components/Paginate\";\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNum = match.params.pageNum || 1;\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(\"\", pageNum));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNum,\r\n  ]);\r\n\r\n  const deleteHandle = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      //delete products\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n  const createProductHandle = () => {\r\n    //Create product\r\n    dispatch(createProduct());\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandle}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandle(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, productId, product, history, successUpdate]);\r\n\r\n  const uploadFileHandle = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //update product\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name </Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"choose file\"\r\n                custom\r\n                onChange={uploadFileHandle}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter countInStock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNum\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNum\" component={HomeScreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNum\"\n            component={HomeScreen}\n            exact\n          />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}